[include heads.cfg]

########################################
# DUAL-CARRIAGES
########################################

[respond]

[probe]
# z_offset: -0.84
z_offset: -0.770 ; -0.750 ; 0.77

# variable_offset_x: 126.30(x1) - 126.00(x0) = 0.3
# variable_offset_x: 126.20(x1) - 126.00(x0) = 0.2
# variable_offset_x: 125.4(x1) - 126.00(x0) = 0.2
# variable_offset_y: 130.00(y1) - 131.00(y0) = -1
# variable_offset_y: 131.20(y1) - 131.00(y0) = 0.2
[gcode_macro DC_VARS]
# Offset coordinates for dual_carriage

# X1 - X0 = x_offset
# variable_offset_x: 0.3
# 130.10 - 129.50
# variable_offset_x: -0.55 ; previous
# variable_offset_x: 0.4463
# variable_offset_x: 0
variable_offset_x: 0.3161 ; 0.3058 ; 0.2957 ; 0.3160 ; 0.3043 ; 0.3279 ; 0.2383
# variable_offset_x: -0.0296
# variable_offset_x: -0.0437 ; using TAMV

# Y1 - Y0 = y_offset
# variable_offset_y: 0.2 ; previous
# variable_offset_y: 0
variable_offset_y: 0.3466 ; 0.3466 ; 0.3568 ; 0.3568 ; 0.3550 ; 0.3484 ; 0.3522
# variable_offset_y: 0.1777
# variable_offset_y: 0.2730 ; using TAMV

# X -0.1742,Y 0.4548
# X 0.4463,Y 0.2182
# X 0.4952,Y 0.0762
#X-0.1992,Y0.3036
#X0.1203 Y0.3808
# X0.1206 Y0.3921
# X0.1301 Y0.4003
# X0.2095 Y0.3619
# X0.1902 Y0.3899
# X0.1707 Y0.3603
# X0.2081 Y0.3369
# X0.0000 Y-0.4139
# X0.0101 Y-0.4146
# X0.0101 Y-0.4132
# X0.0101 Y-0.4147
# X0.3146 Y-0.3857
# X0.3122 Y-0.3626
# X0.3115 Y-0.3718
# X0.3107 Y-0.3708
# X0.3122 Y-0.3928
# X0.2388 Y0.3945
# X0.2303 Y0.4083
# X0.2228 Y0.4138

# X0.2183 Y0.3572
# X0.2077 Y0.3561
# X0.1980 Y0.3564
# X0.1980 Y0.3564
# X0.1984 Y0.3671
# X0.1997 Y0.3694
# X0.1990 Y0.3583

# variable_offset_z: -0.49
variable_offset_z: -0.495
# Autopark parameters
## default autopark: 0:inactive - 1:active
variable_autopark: 1
variable_z_hop: 0
variable_movespeed: 300
variable_feedrate: 18000
# HeatBed size
variable_bed_x_min: 0
variable_bed_x_max: 415
# Print cooling fans names
variable_fan0: 'fanX1'
variable_fan1: 'fanX2'
# Extruders temp
variable_offset_temp: 0
gcode:

## DUAL-CARRIAGES : FULL_CONTROL - AUTO-PARK

[gcode_macro T0]
description: Activate T0 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
            M400
            {% if dcvars.autopark == 1 %}
                # z-hop
                {% if dcvars.z_hop|float > 0.0 %}
                    {% set max_z = printer.toolhead.axis_maximum.z|float %}
                    {% set cur_z = printer.toolhead.position.z|float %}
                    {% set z_safe = dcvars.z_hop|float if cur_z < (max_z - dcvars.z_hop|float) else (max_z - cur_z) %}
                    G91
                    G1 Z{z_safe}
                    G90
                {% endif %}
                # park tool
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL

            {% endif %}
            # toggle carriage
            ACTIVATE_EXTRUDER EXTRUDER=extruder
            SET_DUAL_CARRIAGE CARRIAGE=0
            # X
            # Fitted shaper 'mzv' frequency = 30.0 Hz (vibrations = 1.5%, smoothing ~= 0.226)
            # To avoid too much smoothing with 'mzv', suggested max_accel <= 2700 mm/sec^2
            # Y
            # Fitted shaper 'mzv' frequency = 38.0 Hz (vibrations = 2.2%, smoothing ~= 0.141)
            # To avoid too much smoothing with 'mzv', suggested max_accel <= 4300 mm/sec^2

            SET_INPUT_SHAPER SHAPER_FREQ_X=30.0 SHAPER_FREQ_Y=38.0 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=MZV

            _NOZZLE_SCRUB

            {% if dcvars.autopark == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}

            # offsets
            SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=1

            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
            {% if (z_safe) is defined and printer.idle_timeout.state != "Printing" %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro T1]
description: Activate T1 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
            M400
            {% if dcvars.autopark == 1 %}
                # z-hop
                {% if dcvars.z_hop|float > 0.0 %}
                    {% set max_z = printer.toolhead.axis_maximum.z|float %}
                    {% set cur_z = printer.toolhead.position.z|float %}
                    {% set z_safe = dcvars.z_hop|float if cur_z < (max_z - dcvars.z_hop|float) else (max_z - cur_z) %}
                    G91
                    G1 Z{z_safe}
                    G90
                {% endif %}
                # park tool
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL
            {% endif %}
            # toggle carriage
            ACTIVATE_EXTRUDER EXTRUDER=extruder1
            SET_DUAL_CARRIAGE CARRIAGE=1

            # X
            # Fitted shaper 'mzv' frequency = 29.0 Hz (vibrations = 1.5%, smoothing ~= 0.242)
            # To avoid too much smoothing with 'mzv', suggested max_accel <= 2500 mm/sec^2
            # Y
            # Fitted shaper 'mzv' frequency = 38.8 Hz (vibrations = 1.4%, smoothing ~= 0.135)
            # To avoid too much smoothing with 'mzv', suggested max_accel <= 4400 mm/sec^2

            SET_INPUT_SHAPER SHAPER_FREQ_X=29.0 SHAPER_FREQ_Y=38.8 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=MZV

            _NOZZLE_SCRUB

            {% if dcvars.autopark == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}

            # offsets
            SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z} MOVE=1

            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
            {% if (z_safe) is defined and printer.idle_timeout.state != "Printing" %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro _PARK_TOOL]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        SAVE_GCODE_STATE NAME=park_tool
        SET_GCODE_OFFSET X=0 Y=0 Z=0
        G90
        {% if printer.toolhead.extruder == 'extruder' %}
            {% set XPOS = printer.configfile.config.stepper_x.position_endstop|float + 0.2 %}
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.stepper_x.position_endstop} F{dcvars.feedrate}
        {% elif (printer.toolhead.extruder) == 'extruder1' %}
            {% set XPOS = printer.configfile.config.dual_carriage.position_max|float - 0.2 %}
            G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
        {% else %}
            RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
        {% endif %}

        RESTORE_GCODE_STATE NAME=park_tool
    {% endif %}

# [gcode_macro _NOZZLE_SCRUB2]
# gcode:
    
#     {% set dcvars = printer["gcode_macro DC_VARS"] %}
#     {% if printer.extruder.can_extrude|lower == 'true' %}
#       G1 E2.5 F300
#       G1 E-1 F600
#     {% else %}
#       {action_respond_info("Extruder not hot enough")}
#     {% endif %}
#     {% if printer.dual_carriage is defined %}
#         G90
#         {% if printer.toolhead.extruder == 'extruder' %}
#             {% set XPOS0 = printer.configfile.config.stepper_x.position_endstop|float - 0.1 %}
#             {% set XPOS1 = printer.configfile.config.stepper_x.position_endstop|float - 35.0 %}

#             # {% for x in range(5) %}
#             # {% endfor %}
#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS0} Y103 F{dcvars.feedrate}
#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS0} Y103 F{dcvars.feedrate}
#             G1 X{XPOS1} Y113 F{dcvars.feedrate}
#             G1 X{XPOS0} Y110 F{dcvars.feedrate}
#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS1} Y103 F{dcvars.feedrate}
#         {% elif (printer.toolhead.extruder) == 'extruder1' %}
#             {% set XPOS0 = printer.configfile.config.dual_carriage.position_endstop|float + 0.1 %}
#             {% set XPOS1 = printer.configfile.config.dual_carriage.position_endstop|float + 35.0 %}

#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS0} Y103 F{dcvars.feedrate}
#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS0} Y103 F{dcvars.feedrate}
#             G1 X{XPOS1} Y113 F{dcvars.feedrate}
#             G1 X{XPOS0} Y110 F{dcvars.feedrate}
#             G1 X{XPOS1} Y123 F{dcvars.feedrate}
#             G1 X{XPOS1} Y103 F{dcvars.feedrate}
            
#             #G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
#         {% else %}
#             RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
#         {% endif %}
#     {% endif %}

[gcode_macro _NOZZLE_SCRUB]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined and printer.toolhead.extruder in ['extruder', 'extruder1'] %}
        G90 ; Absolute Positioning
        {% set MIN = 1 %}
        {% set MAX = 20.0 %}
        {% set T0_MIN = printer.configfile.config.stepper_x.position_min|float %} ; -50
        {% set T1_MIN = printer.configfile.config.dual_carriage.position_max|float %} ; 300
        {% if printer.toolhead.extruder == 'extruder' %}
            {% set TEMP = printer.extruder.temperature %}
            {% set XMAX = T0_MIN %}
            {% set XPOS = T0_MIN + (MIN|float) %}
            {% set XPOS1 = T0_MIN + (MAX|float) %}
        {% else %}
            {% set TEMP = printer.extruder1.temperature %}
            {% set XMAX = T1_MIN %}
            {% set XPOS = T1_MIN - (MIN|float) %}
            {% set XPOS1 = T1_MIN - (MAX|float) %}
        {% endif %}
        # {action_respond_info("t=%s xpos=%s xpos1=%s" % (printer.toolhead.extruder, XPOS, XPOS1))}

        {% set scrubs = 5 %}
        {% set prep_spd_xy = 3000 %}
        {% set purge_length = 7 %} # TODO: params?
        {% set purge_spd = 150 %}
        {% set purge_ret = 2 %}
        {% set ooze_dwell = 1 %}
        {% set purge_temp_min = 235 %}
        {% if TEMP >= purge_temp_min %}
            G90 ; Absolute Positioning
            G1 X{XMAX} F{prep_spd_xy}
            M83      ; relative mode
            G1 E{purge_length} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}

            G90 ; Absolute Positioning
            G1 X{XPOS} F{prep_spd_xy}
            G4 P{ooze_dwell * 1000} ; pause
            G92 E0   ; reset extruder

            G90 ; Absolute Positioning
            G1 X{XPOS1} F{prep_spd_xy}
            {% for i in range(scrubs) %}
                G1 X{XPOS} F{dcvars.feedrate}
                G1 X{XPOS1} F{dcvars.feedrate}
            {% endfor %}
            G1 X{XPOS} F{prep_spd_xy}
        {% endif %}
        G90 ; Absolute Positioning
    {% endif %}

## DUAL-CARRIAGES : MODES ACTIVATION

[gcode_macro M605]
description: Set the dual-carriages mode
gcode:
    {% set mode = params.S|default(1)|int %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        {% if (mode) == 0 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=0
            MODE_FULL_CONTROL
        {% elif (mode) == 1 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=1
            MODE_FULL_CONTROL
        {% elif (mode) == 2 and (params.X) is defined %}
            MODE_DUPLICATION X={params.X} R={offset_temp}
        {% elif (mode) == 2 %}
            MODE_DUPLICATION R={offset_temp}
        {% elif (mode) == 3 %}
            MODE_MIRRORED R={offset_temp}
        {% endif %}
        G1 F3000
    {% endif %}
    
## DUAL-CARRIAGES : PRINT FANS MANAGEMENT

[gcode_macro M106]
rename_existing: M106.1
description: Override "M106" to allow multiple extruders.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    {% if (params.P) is defined %}
        {% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
        SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
    {% elif printer.dual_carriage is defined %}
        _SET_PRINT_FANS_SPEED SPEED={fan_speed}
    {% endif %}
    
[gcode_macro M107]
rename_existing: M107.1
description: Override "M107" to allow multiple extruders.
gcode:
    M106 S0
    
[gcode_macro _SET_PRINT_FANS_SPEED]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        # read print fan speed from active extruder
        {% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
        {% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
        {% set fan_speed = [fan0_speed, fan1_speed]|max %}
    {% endif %}
    {% if printer.dual_carriage.active_carriage == "BOTH" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% endif %}

## DUAL-CARRIAGES : HEATERS MANAGEMENT
    
[gcode_macro M104]
rename_existing: M104.1
description: Override "M104" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}
            M104.1 T0 S{temp}
            M104.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M104.1 T{tool} S{temp}
    {% endif %}
    
[gcode_macro M109]
rename_existing: M109.1
description: Override "M109" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}  
            M104.1 T1 S{temp + dcvars.offset_temp|float}
            M109.1 T0 S{temp}
            M109.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M109.1 T{tool} S{temp}
    {% endif %}

[gcode_macro _SYNC_EXTRUDERS_TEMP]
gcode:
    {% set temp = printer["extruder"].target|float %}
    M109 S{temp}

[gcode_macro CV_NOZZLE_PREP]
gcode:
    IDEX_HOME_Y
    IDEX_HOME_X
    G28 Z
    G1 Z141 F1500
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=2000
    SET_VELOCITY_LIMIT ACCEL=2000
    SET_VELOCITY_LIMIT VELOCITY=150
    SET_LED LED="head1_rgb" RED=0 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1
    SET_LED LED="head0_rgb" RED=0 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1